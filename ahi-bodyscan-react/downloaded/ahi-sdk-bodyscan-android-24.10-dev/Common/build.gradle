plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'jacoco'
}

def gradleToolsDir = "$project.projectDir/../ahi-sdk-build-tools-android/gradle-scripts"
apply from: "$gradleToolsDir/script-jacoco.gradle"
apply from: "$gradleToolsDir/native-dependencies.gradle"
apply from: "$gradleToolsDir/utilities.gradle"

def usingLocalCommonRepo() {
    return localPropertyDefined("ahi_sdk_common_android_local_dir")
}

android {
    compileSdk 33
    def SDK_VERSION_CODE = "cat VERSION.txt".execute().text.trim()
    defaultConfig {
        minSdk 26
        targetSdk 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        buildConfigField 'String', 'SDK_VERSION_CODE', "\"${SDK_VERSION_CODE}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

/**
 * Configuration of code coverage for unit tests
 */
tasks.withType(Test) {
    useJUnitPlatform()
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

dependencies {
    if (usingLocalCommonRepo()) {
        api project(path: ":ahi-sdk-common-android")
    } else {
        api "com.advancedhumanimaging.sdk:ahi-sdk-common:$getBranchVersion.+"
    }
    cpp 'com.advancedhumanimaging.sdk:ahi-sdk-cpp-utils:22.0.64'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'com.google.android.material:material:1.7.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4"

    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    def mockk_version = "1.12.2"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "io.mockk:mockk-agent-jvm:$mockk_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.1"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.7.1"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.1"
}